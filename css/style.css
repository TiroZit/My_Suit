@charset "UTF-8";
/* stylelint-disable value-keyword-case */
/* stylelint-disable scss/at-rule-conditional-no-parentheses */
/* stylelint-disable no-invalid-position-at-import-rule */
/* stylelint-disable indentation */
/* stylelint-disable scss/dollar-variable-pattern */
@font-face {
  font-family: Manrope;
  font-display: swap;
  src: url("../fonts/Manrope-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: Manrope;
  font-display: swap;
  src: url("../fonts/Manrope-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: Manrope;
  font-display: swap;
  src: url("../fonts/Manrope-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: Manrope;
  font-display: swap;
  src: url("../fonts/Manrope-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
}
:root {
  --color-black: #000;
  --color-black-eerie: #1C1C1E;
  --color-white: #fff;
  --color-white-chinese: #E1E1E1;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
}

:focus {
  outline: none;
}

html,
body {
  height: 100%;
  min-width: 320px;
}

body {
  color: var(--color-black);
  background-color: var(--color-white);
  line-height: 1;
  font-family: "Manrope";
  font-size: 0.8125rem;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

input,
button,
textarea {
  font-family: "Manrope";
  font-size: inherit;
  color: inherit;
}

button {
  cursor: pointer;
  color: inherit;
  background-color: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
}

a:link,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul,
ol {
  list-style: none;
}

img {
  vertical-align: top;
  object-fit: cover;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

address {
  font-style: unset;
}

body {
  font-weight: 500;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  overflow: hidden;
}
.wrapper > main {
  flex: 1 1 auto;
}

.js-focus-visible :focus-visible {
  transition: outline 0.1s ease 0s;
}

.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
[class*=__container] {
  box-sizing: content-box;
  max-width: 69.375rem;
  margin: 0 auto;
  padding: 0 0.625rem;
}

[class*=-ibg] {
  position: relative;
}
[class*=-ibg] img {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
}

[class*=-ibg_contain] img {
  object-fit: contain;
}

.header__container {
  position: relative;
  display: flex;
  align-items: center;
  padding-top: 1.75rem;
  padding-bottom: 1.375rem;
  border-bottom: 1px solid var(--color-white-chinese);
}
.header__logo {
  display: flex;
  flex: 1 1 8.1875rem;
  justify-content: center;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
}
.menu__list {
  display: flex;
  align-items: center;
}
@supports (gap: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem )) {
  .menu__list {
    gap: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem );
  }
}
@supports not (gap: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem )) {
  .menu__list {
    gap: calc(0.9375rem + 1.5625 * (100vw - 20rem) / 50.625);
  }
}
.menu__button {
  display: flex;
  align-items: center;
}
.menu__button svg {
  width: 0.5rem;
  height: 0.3125rem;
  margin-left: 0.3125rem;
}

.submenu {
  position: absolute;
  top: 6.25rem;
  left: 0;
  display: flex;
  width: 100%;
  padding-top: 1.75rem;
  padding-right: 0.625rem;
  padding-bottom: 2.5rem;
  padding-left: 0.625rem;
  border-bottom: 1px solid var(--color-white-chinese);
}
.submenu__list {
  display: flex;
  flex: 0 1 890px;
  flex-direction: column;
  flex-wrap: wrap;
  row-gap: 0.625rem;
  column-gap: 4.375rem;
}
@supports (max-height: clamp( 9.375rem , 31.1728395062rem  +  -30.8641975309vw , 25rem )) {
  .submenu__list {
    max-height: clamp( 9.375rem , 31.1728395062rem  +  -30.8641975309vw , 25rem );
  }
}
@supports not (max-height: clamp( 9.375rem , 31.1728395062rem  +  -30.8641975309vw , 25rem )) {
  .submenu__list {
    max-height: calc(25rem + -15.625 * (100vw - 20rem) / 50.625);
  }
}
.submenu__link {
  display: block;
  padding: 0.3125rem 0rem 0.3125rem 0rem;
}
.submenu__close {
  position: absolute;
  top: 0;
  right: 0;
}
.submenu__close svg {
  width: 3.75rem;
  height: 3.75rem;
}

.menu-icons {
  display: flex;
  align-items: center;
  color: var(--color-black-eerie);
}
@supports (margin-left: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem )) {
  .menu-icons {
    margin-left: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem );
  }
}
@supports not (margin-left: clamp( 0.9375rem , 0.3202160494rem  +  3.0864197531vw , 2.5rem )) {
  .menu-icons {
    margin-left: calc(0.9375rem + 1.5625 * (100vw - 20rem) / 50.625);
  }
}
@supports (gap: clamp( 0.9375rem , 0.5671296296rem  +  1.8518518519vw , 1.875rem )) {
  .menu-icons {
    gap: clamp( 0.9375rem , 0.5671296296rem  +  1.8518518519vw , 1.875rem );
  }
}
@supports not (gap: clamp( 0.9375rem , 0.5671296296rem  +  1.8518518519vw , 1.875rem )) {
  .menu-icons {
    gap: calc(0.9375rem + 0.9375 * (100vw - 20rem) / 50.625);
  }
}
.menu-icons__item {
  display: flex;
  align-items: center;
}
.menu-icons__item svg {
  width: 1.5rem;
  height: 1.5rem;
}

/*
.icon-menu {
  display: none;
  @media (max-width: $mobile) {
    display: block;
    position: relative;
    width: rem(30);
    height: rem(18);
    cursor: pointer;
    z-index: 5;
    span,
    &::before,
    &::after {
      content: "";
      transition: all 0.3s ease 0s;
      right: 0;
      position: absolute;
      width: 100%;
      height: rem(2);
      background-color: #000;
    }
    &::before {
      top: 0;
    }
    &::after {
      bottom: 0;
    }
    span {
      top: calc(50% - rem(1));
    }
    .menu-open & {
      span {
        width: 0;
      }
      &::before,
      &::after {
      }
      &::before {
        top: calc(50% - rem(1));
        transform: rotate(-45deg);
      }
      &::after {
        bottom: calc(50% - rem(1));
        transform: rotate(45deg);
      }
    }
  }
}
*/
